/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsDate,
  IsInt,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { SeasonCourseUpdateManyWithoutSeasonsInput } from "./SeasonCourseUpdateManyWithoutSeasonsInput";
import { TeamUpdateManyWithoutSeasonsInput } from "./TeamUpdateManyWithoutSeasonsInput";

@InputType()
class SeasonUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  midseasonDate?: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  numTeams?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  playersPerTeam?: number;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  scheduleCreated?: number;

  @ApiProperty({
    required: false,
    type: () => SeasonCourseUpdateManyWithoutSeasonsInput,
  })
  @ValidateNested()
  @Type(() => SeasonCourseUpdateManyWithoutSeasonsInput)
  @IsOptional()
  @Field(() => SeasonCourseUpdateManyWithoutSeasonsInput, {
    nullable: true,
  })
  seasonCourse?: SeasonCourseUpdateManyWithoutSeasonsInput;

  @ApiProperty({
    required: false,
    type: () => TeamUpdateManyWithoutSeasonsInput,
  })
  @ValidateNested()
  @Type(() => TeamUpdateManyWithoutSeasonsInput)
  @IsOptional()
  @Field(() => TeamUpdateManyWithoutSeasonsInput, {
    nullable: true,
  })
  team?: TeamUpdateManyWithoutSeasonsInput;
}

export { SeasonUpdateInput as SeasonUpdateInput };
